env:
  JULIA_VERSION: "1.8.3"
  CUDA_VERSION: "11.2"
  OPENMPI_VERSION: "4.1.1"
  OPENBLAS_NUM_THREADS: 1
  CLIMATEMACHINE_SETTINGS_FIX_RNG_SEED: "true"
  JULIA_DEPOT_PATH: "${BUILDKITE_BUILD_PATH}/${BUILDKITE_PIPELINE_SLUG}/depot/cpu"

steps:
  - label: "init cpu env"
    key: "init_cpu_env"
    command:
      - "echo $$JULIA_DEPOT_PATH"
      - echo "--- Configure MPI"
      - julia -e 'using Pkg; Pkg.add("MPIPreferences"); using MPIPreferences; use_system_binary()'

      - echo "--- Instantiate project"
      - "julia --project -e 'using Pkg; Pkg.instantiate(;verbose=true)'"
      - "julia --project -e 'using Pkg; Pkg.precompile(;strict=true)'"

      - echo "--- Instantiate test"
      - "julia --project=test -e 'using Pkg; Pkg.develop(path=\".\")'"
      - "julia --project=test -e 'using Pkg; Pkg.instantiate(;verbose=true)'"
      - "julia --project=test -e 'using Pkg; Pkg.precompile(;strict=true)'"

      - echo "--- Instantiate perf"
      - "julia --project=perf -e 'using Pkg; Pkg.instantiate(;verbose=true)'"
      - "julia --project=perf -e 'using Pkg; Pkg.precompile(;strict=true)'"

      - echo "--- Package status"
      - "julia --project -e 'using Pkg; Pkg.status()'"

    agents:
      config: cpu
      queue: central
      slurm_ntasks: 1

  # - label: "init gpu env"
  #   key: "init_gpu_env"
  #   command:
  #     - echo "--- Configure MPI"
  #     - julia -e 'using Pkg; Pkg.add("MPIPreferences"); using MPIPreferences; use_system_binary()'

  #     - echo "--- Instantiate project"
  #     - "julia --project -e 'using Pkg; Pkg.instantiate(;verbose=true)'"
  #     - "julia --project -e 'using Pkg; Pkg.precompile(;strict=true)'"

  #     - echo "--- Instantiate test"
  #     - "julia --project=test -e 'using Pkg; Pkg.develop(path=\".\")'"
  #     - "julia --project=test -e 'using Pkg; Pkg.instantiate(;verbose=true)'"
  #     - "julia --project=test -e 'using Pkg; Pkg.precompile()'"

  #     - echo "--- Initialize CUDA runtime"
  #     - "julia --project -e 'using CUDA; CUDA.precompile_runtime()'"
  #     - "julia --project -e 'using CUDA; CUDA.versioninfo()'"

  #     - echo "--- Package status"
  #     - "julia --project -e 'using Pkg; Pkg.status()'"
  #   agents:
  #     config: gpu
  #     queue: central
  #     slurm_ntasks: 1
  #     slurm_gres: "gpu:1"

  - wait

  - label: "CPU tests"
    command:
      - "julia --project=test --check-bounds=yes test/runtests.jl"
    artifact_paths: "output/*"
    agents:
      config: cpu
      queue: central
      slurm_ntasks: 1

  # - label: "GPU tests"
  #   command:
  #     - "julia --project=test --check-bounds=yes test/runtests.jl CuArray"
  #   artifact_paths: "output/*"
  #   agents:
  #     config: gpu
  #     queue: central
  #     slurm_ntasks: 1
  #     slurm_gres: "gpu:1"

  - label: "Flame graph (1D diffusion)"
    command:
      - "julia --project=perf perf/flame.jl --job_id diffusion_1D"
    artifact_paths: "diffusion_1D/*"
    agents:
      config: cpu
      queue: central
      slurm_ntasks: 1

  - label: "Jet graph (ode fun)"
    command:
      - "julia --project=perf perf/jet.jl --problem ode_fun"
    agents:
      config: cpu
      queue: central
      slurm_ntasks: 1

  - label: "Jet (forward euler)"
    command:
      - "julia --project=perf perf/jet.jl --problem fe"
    agents:
      config: cpu
      queue: central
      slurm_ntasks: 1

  - label: "Benchmark"
    command:
      - "julia --project=perf perf/benchmark.jl"
    agents:
      config: cpu
      queue: central
      slurm_ntasks: 1
